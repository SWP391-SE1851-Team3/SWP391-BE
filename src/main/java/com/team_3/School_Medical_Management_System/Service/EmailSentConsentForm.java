package com.team_3.School_Medical_Management_System.Service;

import com.team_3.School_Medical_Management_System.InterfaceRepo.NotificationsParentRepository;
import com.team_3.School_Medical_Management_System.Model.NotificationsParent;
import com.team_3.School_Medical_Management_System.Model.Parent;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
@Service
public class EmailSentConsentForm {
    @Autowired
    private JavaMailSender mailSender;
    @Autowired
    private NotificationsParentRepository notificationsParentRepository;

    public void sendSimpleNotificationEmail(Parent parent, String title, String content, Integer notificationId) {
        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(parent.getEmail());
        message.setSubject(title);

        // Th√™m th√¥ng tin ng∆∞·ªùi g·ª≠i v√† th·ªùi gian v√†o n·ªôi dung
        String currentUser = getCurrentUsername();
        String currentDateTime = getCurrentVietnamDateTime();
        String enhancedContent = content + "\n\n" +
                "Th·ªùi gian g·ª≠i: " + currentDateTime + "\n" +
                "Ng∆∞·ªùi g·ª≠i: " + currentUser;

        message.setText(enhancedContent);
        mailSender.send(message);

        // C·∫≠p nh·∫≠t tr·∫°ng th√°i th√¥ng b√°o th√†nh true sau khi g·ª≠i th√†nh c√¥ng
        updateNotificationStatus(notificationId);
    }

    public void sendHtmlNotificationEmail(Parent parent, String title, String content, Integer notificationId) {
        try {
            // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng hi·ªán t·∫°i v√† th·ªùi gian
            String currentUser = getCurrentUsername();
            String currentDateTime = getCurrentVietnamDateTime();

            // T·∫°o MimeMessage v·ªõi n·ªôi dung HTML
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(parent.getEmail());
            helper.setSubject(title);
            helper.setText(createHtmlContent(parent, content, currentDateTime, currentUser), true);

            mailSender.send(message);

            // C·∫≠p nh·∫≠t tr·∫°ng th√°i th√¥ng b√°o
            updateNotificationStatus(notificationId);

        } catch (MessagingException e) {
            throw new RuntimeException("L·ªói khi g·ª≠i email th√¥ng b√°o: " + e.getMessage(), e);
        }
    }

    /**
     * L·∫•y t√™n ng∆∞·ªùi d√πng hi·ªán t·∫°i t·ª´ context b·∫£o m·∫≠t
     */
    private String getCurrentUsername() {
//        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
        String name = "TR∆Ø·ªúNG FPT";
        return name;
    }

    /**
     * L·∫•y th·ªùi gian hi·ªán t·∫°i theo ƒë·ªãnh d·∫°ng v√† m√∫i gi·ªù Vi·ªát Nam
     */
    private String getCurrentVietnamDateTime() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        return LocalDateTime.now(ZoneId.of("Asia/Ho_Chi_Minh")).format(formatter);
    }

    /**
     * T·∫°o n·ªôi dung HTML ƒë·∫πp m·∫Øt cho email
     */
    private String createHtmlContent(Parent parent, String content, String datetime, String username) {
        return String.format("""
            <html>
            <head>
                <meta charset=\"UTF-8\">
                <style>
                    body { font-family: Arial, sans-serif; background-color: #0f0f0f; margin: 0; padding: 0; }
                    .card { background-color: #1c1c1e; color: #fff; max-width: 600px; margin: auto; border-radius: 10px; overflow: hidden; box-shadow: 0 4px 10px rgba(0,0,0,0.5); }
                    .header { background: linear-gradient(90deg, #0ea5e9, #2563eb); padding: 20px; text-align: center; }
                    .header h2 { margin: 0; color: white; }
                    .subtitle { background-color: #111827; padding: 10px 20px; color: #facc15; font-weight: bold; }
                    .content { padding: 20px; line-height: 1.6; background-color: #1f2937; }
                    .section { background-color: #111827; margin: 15px 20px; padding: 15px; border-left: 4px solid #10b981; border-radius: 5px; }
                    .section-title { font-weight: bold; color: #10b981; margin-bottom: 5px; }
                    .footer { text-align: center; background-color: #1e3a8a; padding: 15px; color: #cbd5e1; font-size: 13px; }
                    .footer p { margin: 5px 0; }
                    .highlight { color: #facc15; font-weight: bold; }
                </style>
            </head>
            <body>
                <div class=\"card\">
                    <div class=\"header\">
                        <h2>üßæ Th√¥ng B√°o Kh√°m S·ª©c Kh·ªèe</h2>
                        <p style=\"margin-top: 5px; font-size: 14px;\">H·ªá th·ªëng qu·∫£n l√Ω y t·∫ø tr∆∞·ªùng h·ªçc</p>
                    </div>
                    <div class=\"subtitle\">
                        K√≠nh ch√†o Qu√Ω Ph·ª• huynh <span class=\"highlight\">%s</span>!
                    </div>
                    <div class=\"content\">
                        <p>Ch√∫ng t√¥i g·ª≠i ƒë·∫øn Qu√Ω Ph·ª• huynh th√¥ng b√°o quan tr·ªçng v·ªÅ <span class=\"highlight\">l·ªãch kh√°m s·ª©c kh·ªèe</span> c·ªßa con em.</p>
                        <div class=\"section\">
                            <div class=\"section-title\">‚úî Chi Ti·∫øt Th√¥ng B√°o</div>
                            %s
                        </div>
                        <div class=\"section\">
                            <div class=\"section-title\">üì© Th√¥ng Tin G·ª≠i Th√¥ng B√°o</div>
                            <p>‚è∞ Th·ªùi gian g·ª≠i: <strong>%s</strong></p>
                            <p>üë§ Ng∆∞·ªùi g·ª≠i: <strong>%s</strong></p>
                        </div>
                    </div>
                    <div class=\"footer\">
                        <p>üìò Ban Y T·∫ø Tr∆∞·ªùng H·ªçc</p>
                        <p>Ch√∫ng t√¥i cam k·∫øt chƒÉm s√≥c s·ª©c kh·ªèe t·ªët nh·∫•t cho c√°c h·ªçc sinh.</p>
                        <p><em>H·ªá th·ªëng qu·∫£n l√Ω y t·∫ø hi·ªán ƒë·∫°i v√† chuy√™n nghi·ªáp</em></p>
                    </div>
                </div>
            </body>
            </html>
        """, parent.getFullName(), formatContentToHtml(content), datetime, username);
    }


    /**
     * Chuy·ªÉn ƒë·ªïi n·ªôi dung vƒÉn b·∫£n th√†nh HTML
     */
    private String formatContentToHtml(String content) {
        return "<p>" + content.replace("\n\n", "</p><p>")
                .replace("\n", "<br>") + "</p>";
    }

    /**
     * C·∫≠p nh·∫≠t tr·∫°ng th√°i th√¥ng b√°o
     */
    private void updateNotificationStatus(Integer notificationId) {
        NotificationsParent notification = notificationsParentRepository.findById(notificationId)
                .orElseThrow(() -> new RuntimeException("Notification not found with ID: " + notificationId));
        notification.setStatus(true);
        notificationsParentRepository.save(notification);
    }

    /**
     * Ph∆∞∆°ng th·ª©c ki·ªÉm tra c·∫•u h√¨nh email
     */
    public void testEmailConfig(String to) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(to);
            helper.setSubject("Ki·ªÉm tra c·∫•u h√¨nh email");
            helper.setText(
                    "<html><body>" +
                            "<h2>Ki·ªÉm tra email</h2>" +
                            "<p>ƒê√¢y l√† email ki·ªÉm tra c·∫•u h√¨nh.</p>" +
                            "<p>Th·ªùi gian: " + getCurrentVietnamDateTime() + "</p>" +
                            "<p>Ng∆∞·ªùi g·ª≠i: " + getCurrentUsername() + "</p>" +
                            "</body></html>",
                    true
            );

            mailSender.send(message);
        } catch (MessagingException e) {
            throw new RuntimeException("L·ªói khi g·ª≠i email ki·ªÉm tra: " + e.getMessage(), e);
        }
    }

}
